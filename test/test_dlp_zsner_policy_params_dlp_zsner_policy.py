# coding: utf-8

"""
    

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dlp_zsner_policy_params_dlp_zsner_policy import DlpZsnerPolicyParamsDlpZsnerPolicy

class TestDlpZsnerPolicyParamsDlpZsnerPolicy(unittest.TestCase):
    """DlpZsnerPolicyParamsDlpZsnerPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DlpZsnerPolicyParamsDlpZsnerPolicy:
        """Test DlpZsnerPolicyParamsDlpZsnerPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DlpZsnerPolicyParamsDlpZsnerPolicy`
        """
        model = DlpZsnerPolicyParamsDlpZsnerPolicy()
        if include_optional:
            return DlpZsnerPolicyParamsDlpZsnerPolicy(
                active = True,
                anonymizer = openapi_client.models.dlp_policy_anonymizer.DlpPolicy_anonymizer(
                    type = 'replace', ),
                entities = [
                    openapi_client.models.dlp_zsner_policy_params_dlp_zsner_policy_entities_inner.DlpZsnerPolicyParams_dlp_zsner_policy_entities_inner(
                        entity = '', )
                    ],
                name = '',
                response = 'block',
                score_threshold = 1.337
            )
        else:
            return DlpZsnerPolicyParamsDlpZsnerPolicy(
        )
        """

    def testDlpZsnerPolicyParamsDlpZsnerPolicy(self):
        """Test DlpZsnerPolicyParamsDlpZsnerPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
